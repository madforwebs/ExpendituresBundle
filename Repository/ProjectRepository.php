<?php

namespace MadForWebs\TaskBundle\Repository;

/**
 * ProjectRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProjectRepository extends \Doctrine\ORM\EntityRepository
{

    public function findAllByFilter($userId = NULL)
    {

        $q = $this->createQueryBuilder('p')
            ->select('p')
            ->leftJoin('p.users', 'u');

        $q->andWhere('u.id = :user_id')
                ->setParameter ('user_id', $userId);

        return  $q->getQuery()->getResult();
    }

    public function findByParameters($parameters)
    {
//        dump(  $parameters );
//        exit;
        if ($parameters['entity']->getOwner()) {
            $query = $this->createQueryBuilder('p')
                ->leftJoin('p.users', 'u')
                ->where('u.id = (:usuario)')
                ->setParameter('usuario', $parameters['entity']->getOwner()->getId());
//            dump($query->getQuery());
//            exit;
            return $query;

        }

//        $query = $this->createQueryBuilder('j')
//            ->where('j.estado IN (:activos)')
//            ->andWhere('j.perfil IN (:perfil)')
//            ->setParameter('activos', array(Estado::getEstadoJugadorVinculado(), Estado::getEstadoJugadorDisponible()))
//            ->setParameter('perfil', Jugador::getInstance()->getPerfiles())
//            ->orderBy('j.nombreApellidos', 'ASC');
//
//        if ($parameters['entity']->getTiposSelectJugadoresGenerico())
//            $query->setParameter('perfil', [Jugador::getInstance()->getPerfilJugador()]);

    }

}
